{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport utils from \"../utils/utils\";\n\nconst useGameState = () => {\n  _s();\n\n  const [stars, setStars] = useState(utils.random(1, 9)); //candidateNumbers\n\n  const [availableNums, setAvailableNums] = useState(utils.range(1, 9)); //availableNums\n\n  const [candidateNums, setCandidateNums] = useState([]);\n  const [secondsLeft, setSecondsLeft] = useState(10);\n  useEffect(() => {\n    if (secondsLeft > 0) {\n      const timerId = setTimeout(() => {\n        setSecondsLeft(secondsLeft - 1);\n      }, 1000);\n      return () => clearTimeout(timerId);\n    }\n  });\n\n  const setGameState = newCandidateNums => {\n    if (utils.sum(newCandidateNums) !== stars) setCandidateNums(newCandidateNums);else {\n      const newAvailableNums = availableNums.filter(number => !newCandidateNums.includes(number)); // redraw stars (from whats available)\n\n      setStars(utils.randomSumIn(newAvailableNums, 9));\n      setAvailableNums(newAvailableNums);\n      setCandidateNums([]);\n    }\n  };\n\n  return {\n    stars,\n    availableNums,\n    candidateNums,\n    secondsLeft,\n    setGameState\n  };\n};\n\n_s(useGameState, \"+C/LvG7qkPd5YTZ59/XKdcLBwGo=\");\n\nexport default useGameState;","map":{"version":3,"names":["useState","useEffect","utils","useGameState","stars","setStars","random","availableNums","setAvailableNums","range","candidateNums","setCandidateNums","secondsLeft","setSecondsLeft","timerId","setTimeout","clearTimeout","setGameState","newCandidateNums","sum","newAvailableNums","filter","number","includes","randomSumIn"],"sources":["/Users/AAE16/Documents/repos/stars-match2/src/components/useGameState.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport utils from \"../utils/utils\";\n\nconst useGameState = () => {\n  const [stars, setStars] = useState(utils.random(1, 9));\n  //candidateNumbers\n  const [availableNums, setAvailableNums] = useState(utils.range(1, 9));\n  //availableNums\n  const [candidateNums, setCandidateNums] = useState([]);\n  const [secondsLeft, setSecondsLeft] = useState(10);\n\n  useEffect(() => {\n    if (secondsLeft > 0) {\n      const timerId = setTimeout(() => {\n        setSecondsLeft(secondsLeft - 1);\n      }, 1000);\n      return () => clearTimeout(timerId);\n    }\n  });\n\n  const setGameState = (newCandidateNums) => {\n    if (utils.sum(newCandidateNums) !== stars)\n      setCandidateNums(newCandidateNums);\n    else {\n      const newAvailableNums = availableNums.filter(\n        (number) => !newCandidateNums.includes(number)\n      );\n      // redraw stars (from whats available)\n      setStars(utils.randomSumIn(newAvailableNums, 9));\n      setAvailableNums(newAvailableNums);\n      setCandidateNums([]);\n    }\n  };\n\n  return { stars, availableNums, candidateNums, secondsLeft, setGameState };\n};\n\nexport default useGameState;\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACzB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACE,KAAK,CAACI,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAD,CAAlC,CADyB,CAEzB;;EACA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAACE,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,CAAlD,CAHyB,CAIzB;;EACA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;EAEAC,SAAS,CAAC,MAAM;IACd,IAAIW,WAAW,GAAG,CAAlB,EAAqB;MACnB,MAAME,OAAO,GAAGC,UAAU,CAAC,MAAM;QAC/BF,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;MACD,CAFyB,EAEvB,IAFuB,CAA1B;MAGA,OAAO,MAAMI,YAAY,CAACF,OAAD,CAAzB;IACD;EACF,CAPQ,CAAT;;EASA,MAAMG,YAAY,GAAIC,gBAAD,IAAsB;IACzC,IAAIhB,KAAK,CAACiB,GAAN,CAAUD,gBAAV,MAAgCd,KAApC,EACEO,gBAAgB,CAACO,gBAAD,CAAhB,CADF,KAEK;MACH,MAAME,gBAAgB,GAAGb,aAAa,CAACc,MAAd,CACtBC,MAAD,IAAY,CAACJ,gBAAgB,CAACK,QAAjB,CAA0BD,MAA1B,CADU,CAAzB,CADG,CAIH;;MACAjB,QAAQ,CAACH,KAAK,CAACsB,WAAN,CAAkBJ,gBAAlB,EAAoC,CAApC,CAAD,CAAR;MACAZ,gBAAgB,CAACY,gBAAD,CAAhB;MACAT,gBAAgB,CAAC,EAAD,CAAhB;IACD;EACF,CAZD;;EAcA,OAAO;IAAEP,KAAF;IAASG,aAAT;IAAwBG,aAAxB;IAAuCE,WAAvC;IAAoDK;EAApD,CAAP;AACD,CAhCD;;GAAMd,Y;;AAkCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}