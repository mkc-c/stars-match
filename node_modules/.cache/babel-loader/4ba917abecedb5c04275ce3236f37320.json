{"ast":null,"code":"var _jsxFileName = \"/Users/AAE16/Documents/repos/stars-match2/src/components/Game.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport utils from \"../utils/utils\";\nimport PlayNumber from \"./PlayNumber\";\nimport StarsDisplay from \"./StarsDisplay\";\nimport PlayAgain from \"./PlayAgain\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = props => {\n  // const [stars, setStars] = useState(utils.random(1, 9));\n  // //candidateNumbers\n  // const [availableNums, setAvailableNums] = useState(utils.range(1, 9));\n  // //availableNums\n  // const [candidateNums, setCandidateNums] = useState([]);\n  // const [secondsLeft, setSecondsLeft] = useState(10);\n  //setTimeout\n  // useEffect(() => {\n  //   if (secondsLeft > 0) {\n  //     const timerId = setTimeout(() => {\n  //       setSecondsLeft(secondsLeft - 1);\n  //     }, 1000);\n  //     return () => clearTimeout(timerId);\n  //   }\n  // });\n  const candidatesAreWrong = utils.sum(candidateNums) > stars; //   const gameIsDone = availableNums.length === 0;\n  //   const gameIsLost = secondsLeft === 0;\n\n  const gameStatus = availableNums.length === 0 ? \"won\" : secondsLeft === 0 ? \"lost\" : \"active\";\n\n  const numberStatus = number => {\n    if (!availableNums.includes(number)) {\n      return \"used\";\n    }\n\n    if (candidateNums.includes(number)) {\n      return candidatesAreWrong ? \"wrong\" : \"candidate\";\n    }\n\n    return \"available\";\n  };\n\n  const onNumberClick = (number, currentStatus) => {\n    // currentStatus => newStatus\n    if (currentStatus === \"used\") return; // candidateNums\n\n    const newCandidateNums = currentStatus === \"available\" ? candidateNums.concat(number) : candidateNums.filter(cn => cn !== number); //   if (utils.sum(newCandidateNums) !== stars)\n    //     setCandidateNums(newCandidateNums);\n    //   else {\n    //     const newAvailableNums = availableNums.filter(\n    //       (number) => !newCandidateNums.includes(number)\n    //     );\n    //     // redraw stars (from whats available)\n    //     setStars(utils.randomSumIn(newAvailableNums, 9));\n    //     setAvailableNums(newAvailableNums);\n    //     setCandidateNums([]);\n    //   }\n  };\n\n  const resetGame = () => {\n    setStars(utils.random(1, 9));\n    setAvailableNums(utils.range(1, 9));\n    setCandidateNums([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help\",\n      children: \"Pick 1 or more numbers that sum to the number of stars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: gameStatus !== \"active\" ? /*#__PURE__*/_jsxDEV(PlayAgain, {\n          onClick: props.startNewGame,\n          gameStatus: gameStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(StarsDisplay, {\n          stars: stars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: utils.range(1, 9).map(number => /*#__PURE__*/_jsxDEV(PlayNumber, {\n          status: numberStatus(number),\n          number: number,\n          onNumberClick: onNumberClick\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [\"Time remaining: \", secondsLeft]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","utils","PlayNumber","StarsDisplay","PlayAgain","Game","props","candidatesAreWrong","sum","candidateNums","stars","gameStatus","availableNums","length","secondsLeft","numberStatus","number","includes","onNumberClick","currentStatus","newCandidateNums","concat","filter","cn","resetGame","setStars","random","setAvailableNums","range","setCandidateNums","startNewGame","map"],"sources":["/Users/AAE16/Documents/repos/stars-match2/src/components/Game.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport utils from \"../utils/utils\";\n\nimport PlayNumber from \"./PlayNumber\";\nimport StarsDisplay from \"./StarsDisplay\";\nimport PlayAgain from \"./PlayAgain\";\n\nconst Game = (props) => {\n  // const [stars, setStars] = useState(utils.random(1, 9));\n  // //candidateNumbers\n  // const [availableNums, setAvailableNums] = useState(utils.range(1, 9));\n  // //availableNums\n  // const [candidateNums, setCandidateNums] = useState([]);\n  // const [secondsLeft, setSecondsLeft] = useState(10);\n  //setTimeout\n\n  // useEffect(() => {\n  //   if (secondsLeft > 0) {\n  //     const timerId = setTimeout(() => {\n  //       setSecondsLeft(secondsLeft - 1);\n  //     }, 1000);\n  //     return () => clearTimeout(timerId);\n  //   }\n  // });\n\n  const candidatesAreWrong = utils.sum(candidateNums) > stars;\n  //   const gameIsDone = availableNums.length === 0;\n  //   const gameIsLost = secondsLeft === 0;\n  const gameStatus =\n    availableNums.length === 0 ? \"won\" : secondsLeft === 0 ? \"lost\" : \"active\";\n\n  const numberStatus = (number) => {\n    if (!availableNums.includes(number)) {\n      return \"used\";\n    }\n    if (candidateNums.includes(number)) {\n      return candidatesAreWrong ? \"wrong\" : \"candidate\";\n    }\n    return \"available\";\n  };\n\n  const onNumberClick = (number, currentStatus) => {\n      // currentStatus => newStatus\n      if (currentStatus === \"used\") return;\n      // candidateNums\n      const newCandidateNums =\n        currentStatus === \"available\"\n          ? candidateNums.concat(number)\n          : candidateNums.filter((cn) => cn !== number);\n    //   if (utils.sum(newCandidateNums) !== stars)\n    //     setCandidateNums(newCandidateNums);\n    //   else {\n    //     const newAvailableNums = availableNums.filter(\n    //       (number) => !newCandidateNums.includes(number)\n    //     );\n    //     // redraw stars (from whats available)\n    //     setStars(utils.randomSumIn(newAvailableNums, 9));\n    //     setAvailableNums(newAvailableNums);\n    //     setCandidateNums([]);\n    //   }\n  };\n\n  const resetGame = () => {\n    setStars(utils.random(1, 9));\n    setAvailableNums(utils.range(1, 9));\n    setCandidateNums([]);\n  };\n\n  return (\n    <div className=\"game\">\n      <div className=\"help\">\n        Pick 1 or more numbers that sum to the number of stars\n      </div>\n      <div className=\"body\">\n        <div className=\"left\">\n          {gameStatus !== \"active\" ? (\n            <PlayAgain onClick={props.startNewGame} gameStatus={gameStatus} />\n          ) : (\n            <StarsDisplay stars={stars} />\n          )}\n        </div>\n        <div className=\"right\">\n          {utils.range(1, 9).map((number) => (\n            <PlayNumber\n              status={numberStatus(number)}\n              key={number}\n              number={number}\n              onNumberClick={onNumberClick}\n            />\n          ))}\n        </div>\n      </div>\n      <div className=\"timer\">Time remaining: {secondsLeft}</div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}